<!doctype html>
<html lang="en" data-bs-theme="dark">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>{{domain}} | {{site_title}}</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-sRIl4kxILFvY47J16cr9ZwB07vP4J8+LH7qKQnuqkuIAvNWLzeN8tE5YBujZqJLB" crossorigin="anonymous">
</head>
<body>
  <div class="container">

    <!-- Site Title -->
    <div class="row">
      <div class="col-12">
        <h1 class="text-center mb-2">
          <a href="/" class="text-decoration-none text-reset">{{site_title}}</a>
        </h1>
      </div>
    </div>

    <!-- Domain Header -->
    <div class="row">
      <div class="col-12">
        <h2 class="text-center mb-3">{{domain}}</h2>
      </div>
    </div>

    <!-- Authentication Section -->
    <div class="row">
      <div class="col-12">
        <h3 class="text-center mb-4">Authentication</h3>
      </div>
    </div>

    <!-- Alerts align right after the Learn more links -->
    <div id="auth-row" class="row gx-4 gy-0 align-items-start">
      <!-- DNSSEC -->
      <div class="col-lg-4">
        <div class="p-3 pt-0">
          <div class="intro mb-3">
            <h4 class="text-center">DNSSEC</h4>
            <p>DNSSEC provides a way to ensure that the DNS answers a client is receiving from a DNS resolver are correct
              and have not been tampered with. DNSSEC must be configured at the domain's registrar and nameservers.</p>
            <p><a href="https://www.cloudflare.com/learning/dns/dnssec/how-dnssec-works/">Learn more about how
                DNSSEC works</a>.</p>
          </div>

          {% if results.dnssec %}
          <div class="alert alert-success text-center mb-3" role="alert">
            DNSSEC is enabled.
          </div>
          {% else %}
          <div class="alert alert-danger text-center mb-3" role="alert">
            DNSSEC is not enabled.
          </div>
          {% endif %}
        </div>  <!-- End padded wrapper -->
      </div>  <!-- End column -->

      <!-- SPF -->
      <div class="col-lg-4">
        <div class="p-3 pt-0">
          <div class="intro mb-3">
            <h4 class="text-center">SPF</h4>
            <p>Sender Policy Framework (SPF) authenticates email by checking the sending email server IP address against a
              list of domains provided in the envelope from domain. The SPF record can include other records, with up to 10
              DNS lookups.</p>
            <p>The SPF standard is defined in <a href="https://www.rfc-editor.org/rfc/rfc7208.html">RFC 7208</a>.</p>
          </div>

          {% if results.spf.error %}
          <div class="alert alert-danger text-center mb-3" role="alert">
            {{results.spf.error}}
          </div>
          {% elif results.spf.valid %}
          <div class="alert alert-success text-center mb-3" role="alert">
            This domain has a valid SPF record.
          </div>
          {% endif %}

          {% if results.spf.record %}
          <p>Record: <code>{{results.spf.record}}</code></p>
          {% endif %}

          {% if results.spf.dns_lookups %}
          <p>DNS lookups used: {{results.spf.dns_lookups}}/10<br>
            Void lookups: {{results.spf.dns_void_lookups}}/2
          </p>
          {% endif %}

          {% if "parsed" in results.spf and (results.spf.parsed.include|length > 0 or (results.spf.parsed.redirect and results.spf.parsed.redirect.parsed.include|length > 0)) %}
          <p>The following table contains a list of DNS lookups used by each include, including the include lookup itself.</p>
          <div class="table-responsive">
            <table class="table table-bordered table-striped">
              <tr>
                <th scope="col">Domain</th>
                <th scope="col">DNS lookups</th>
              </tr>
              {% for include in results.spf.parsed.include %}
              <tr>
                <td>{{include.domain}}</td>
                <td>{{include.dns_lookups + 1}}</td>
              </tr>
              {% endfor %}
              {% if results.spf.parsed.redirect %}
                {% for include in results.spf.parsed.redirect.parsed.include %}
                <tr>
                  <td>{{include.domain}}</td>
                  <td>{{include.dns_lookups + 1}}</td>
                </tr>
                {% endfor %}
              {% endif %}
            </table>
          </div>
          {% endif %}
        </div>  <!-- End padded wrapper -->
      </div>  <!-- End column -->

      <!-- DMARC -->
      <div class="col-lg-4">
        <div class="p-3 pt-0">
          <div class="intro mb-3">
            <h4 class="text-center">DMARC</h4>
            <p>Domain-based Message Authentication, Reporting, and Conformance (DMARC) ensures that the SPF and DKIM
              authentication mechanisms actually authenticate against the same base domain that the end user sees.</p>
            <p><a href="https://seanthegeek.net/459/demystifying-dmarc/">Learn more about how DMARC works</a>.</p>
          </div> <!-- End intro -->

          {% if results.dmarc.error %}
          <div class="alert alert-danger text-center mb-3" role="alert">
            {{results.dmarc.error}}
          </div>
          {% elif results.dmarc.valid and results.dmarc.tags.pct.value == 100 and results.dmarc.tags.p.value in ["reject","quarantine"] and results.dmarc.tags.sp.value in ["reject","quarantine"] %}
          <div class="alert alert-success text-center mb-3" role="alert">
            This domain has an enforced DMARC policy.
          </div>
          {% else %}
            {% for warning in results.dmarc.warnings %}
            <div class="alert alert-warning text-center mb-3" role="alert">{{warning}}</div>
            {% endfor %}
          {% endif %}

          {% if results.dmarc.record %}
          <p>Record: <code>{{results.dmarc.record}}</code>
            {% if results.dmarc.location %}
            <br>Location: <code>{{results.dmarc.location}}</code>
            {% endif %}
          </p>
          {% endif %}
          {% if "tags" in results.dmarc %}
          <div class="table-responsive">
            <table class="table table-bordered table-striped">
              <tr><th scope="col">Tag</th><th scope="col">Value</th></tr>
              {% for tag, details in results.dmarc.tags.items() %}
                {% if details.explicit and not tag == "v" %}
                <tr>
                  <th scope="row">{{tag}}</th>
                  {% if tag in ["rua", "ruf"] %}
                  <td>
                    <ol class="list-unstyled mb-0">
                      {% for entry in details.value %}
                      <li>{{entry.address}}</li>
                      {% endfor %}
                    </ol>
                  </td>
                  {% else %}
                  <td>{{details.value}}</td>
                  {% endif %}
                </tr>
                {% endif %}
              {% endfor %}
            </table>
          </div>
          {% endif %}
        </div> <!-- End padded wrapper -->
      </div> <!-- End column -->
    </div> <!-- End auth row -->

    <!-- Email Infrastructure -->
    <div class="row">
      <div class="col-12">
        <h3 class="text-center mb-4">Email Infrastructure</h3>
      </div>
    </div>

    <!-- Mail servers -->
    <div class="row">
      <div class="col-lg-4">
        <h4 class="text-center">Mail servers</h4>
        {% if error in results.mx %}
        <div class="alert alert-danger text-center" role="alert">
          {{results.mx.error}}
        </div>
        {% elif results.mx.hosts|length == 0 %}
        <div class="alert alert-info text-center" role="alert">
          No MX records were found.
        </div>
        {% else %}
          {% for host in results.mx.hosts %}
          <div class="table-responsive">
            <table class="table table-bordered table-striped">
              <tr>
                <th scope="row">Preference</th>
                <td>{{host.preference}}</td>
              </tr>
              <tr>
                <th scope="row">Hostname</th>
                <td>{{host.hostname}}</td>
              </tr>
              <tr>
                <th scope="row">Addresses</th>
                <td>
                  <ul class="list-unstyled">
                    {% for address in host.addresses %}
                    <li>{{address}}</li>
                    {% endfor %}
                  </ul>
                </td>
              </tr>
              <tr>
                <th scope="row">DNSSEC</th>
                <td>{{host.dnssec}}</td>
              </tr>
              <tr>
                <th scope="row">TLSA</th>
                <td>{% if host.tlsa %}True{% else %}False{% endif %}</td>
              </tr>
              {% if "tls" in host %}
              <tr>
                <th scope="row">TLS</th>
                <td>{% if host.tls %}True{% else %}False{% endif %}</td>
              </tr>
              {% endif %}
              {% if "starttls" in host %}
              <tr>
                <th scope="row">STARTTLS</th>
                <td>{% if host.starttls %}True{% else %}False{% endif %}</td>
              </tr>
              {% endif %}
            </table>
          </div>
          {% if host.dnssec and host.tlsa %}
          <div class="alert alert-success text-center" role="alert">
            Certificates are pinned using <a href="https://en.wikipedia.org/wiki/DNS-based_Authentication_of_Named_Entities">DANE</a>.
          </div>
          {% endif %}
          {% endfor %}
        {% endif %}
      </div>

      <!-- MTA-STS -->
      <div class="col-lg-4">
        <h4 class="text-center">MTA-STS</h4>
      </div>

      <!-- SMTP TLS Reporting -->
      <div class="col-lg-4">
        <h4 class="text-center">SMTP TLS Reporting</h4>
      </div>
    </div> <!-- End row -->

    <!-- DNS Infrastructure -->
    <div class="row">
      <div class="col-12">
        <h3 class="text-center mb-3">DNS Infrastructure</h3>
      </div>

      <!-- SOA -->
      <div class="col-lg-4">
        <h4 class="text-center">SOA</h4>
        {% if error in results.soa %}
        <div class="alert alert-danger text-center" role="alert">
          {{results.soa.error}}
        </div>
        {% else %}
          {% for warning in results.soa.warnings %}
          <div class="alert alert-warning text-center" role="alert">
            {{warning}}
          </div>
          {% endfor %}
          <p class="text-center">Record: <code>{{results.soa.record}}</code></p>
          <div class="table-responsive">
            <table class="table table-bordered table-striped">
              {% for key, value in results.soa["values"].items() %}
              <tr>
                <th scope="row">{{key.capitalize().replace("_", " ")}}</th>
                <td>{{value}}</td>
              </tr>
              {% endfor %}
            </table>
          </div>
        {% endif %}
      </div>

      <!-- Nameservers -->
      <div class="col-lg-4">
        <h4 class="text-center">Nameservers</h4>
        {% if error in results.ns %}
        <div class="alert alert-danger text-center" role="alert">
          {{results.ns.error}}
        </div>
        {% else %}
        <ul class="list-unstyled text-center">
          {% for host in results.ns.hostnames %}
          <li>{{host}}</li>
          {% endfor %}
        </ul>
        {% endif %}
      </div>
    </div> <!-- End row -->

  </div> <!-- End container -->

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/js/bootstrap.bundle.min.js"
          integrity="sha384-FKyoEForCGlyvwx9Hj09JcYn3nv7wiPVlz7YYwJrWVcXK/BmnVDxM+D2scQbITxI"
          crossorigin="anonymous"></script>

  <!-- Tiny helper to align alerts by equalizing the .intro height -->
  <script>
    (function () {
      const scope = document.getElementById('auth-row');
      if (!scope) return;

      function setIntroHeights() {
        const intros = scope.querySelectorAll('.intro');
        if (!intros.length) return;
        // reset first
        intros.forEach(el => el.style.minHeight = '');
        // compute tallest
        let max = 0;
        intros.forEach(el => { max = Math.max(max, el.offsetHeight); });
        // apply
        intros.forEach(el => el.style.minHeight = max + 'px');
      }

      // simple debounce
      function debounce(fn, ms) {
        let t; return function () {
          clearTimeout(t); t = setTimeout(fn, ms);
        };
      }

      window.addEventListener('load', setIntroHeights);
      window.addEventListener('resize', debounce(setIntroHeights, 150));
    }());
  </script>
</body>
</html>
